version: '3.8'

services:
  # Frontend Services
  web-portal:
    build: ./frontend/web-portal
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api/v1
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080/ws
    depends_on:
      - nlp-gateway
    networks:
      - quantum-nlp

  admin-dashboard:
    build: ./frontend/admin-dashboard
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
    depends_on:
      - nlp-gateway
    networks:
      - quantum-nlp

  developer-portal:
    build: ./frontend/developer-portal
    ports:
      - "3002:3000"
    networks:
      - quantum-nlp

  # Backend Services
  nlp-gateway:
    build: 
      context: .
      dockerfile: backend/services/nlp-gateway/Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/quantum_nlp
      - REDIS_URL=redis://redis:6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - HSM_PIN=${HSM_PIN}
    depends_on:
      - postgres
      - redis
      - neo4j
    networks:
      - quantum-nlp

  intent-classifier:
    build:
      context: .
      dockerfile: backend/services/intent-classifier/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - quantum-nlp

  qlafs-fingerprint:
    build:
      context: .
      dockerfile: backend/services/qlafs-fingerprint/Dockerfile
    ports:
      - "8083:8080"
    environment:
      - HSM_PIN=${HSM_PIN}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/quantum_nlp
    depends_on:
      - postgres
    networks:
      - quantum-nlp
    privileged: true

  # Infrastructure Services
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=quantum_nlp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantum-nlp

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - quantum-nlp

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quantum-nlp

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - quantum-nlp

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - quantum-nlp

volumes:
  postgres_data:
  neo4j_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  quantum-nlp:
    driver: bridge